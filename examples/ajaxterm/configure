#!/usr/bin/env python

import optparse,os

parser = optparse.OptionParser()
parser.add_option("", "--prefix", dest="prefix",default="/usr/local",help="installation prefix (default: /usr/local)")
parser.add_option("", "--port", dest="port", default="8080", help="set the listening TCP port (default: 8080)")
parser.add_option("", "--command", dest="cmd", default=None,help="set the command (default: /bin/login or ssh localhost)")
(o, a) = parser.parse_args()

bin=os.path.join(o.prefix,"bin")
lib=os.path.join(o.prefix,"lib/ajaxterm")
port=o.port
cmd=o.cmd

file("ajaxterm.bin","w").write('#!/bin/sh\nexec "%(lib)s/ajaxterm.py" "$@"\n'%locals())
os.system("chmod a+x ajaxterm.bin")

file("Makefile","w").write("""
build:
	true

install:
	install -d "%(bin)s"
	install -d "%(lib)s"
	install ajaxterm.bin "%(bin)s/ajaxterm"
	install ajaxterm.css ajaxterm.html ajaxterm.js ajaxterm.py sarissa.js sarissa_dhtml.js "%(lib)s"
	install ajaxterm.initd "/etc/init.d/ajaxterm"

clean:
	rm ajaxterm.bin
	rm ajaxterm.initd
	rm Makefile
"""%locals())

file("ajaxterm.initd","w").write("""#!/bin/sh

PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin
DAEMON=%(bin)s/ajaxterm
PORT=%(port)s
PIDFILE=/var/run/ajaxterm.pid

[ -x "$DAEMON" ] || exit 0

#. /lib/lsb/init-functions

case "$1" in
	start)
		echo "Starting ajaxterm on port $PORT"
		start-stop-daemon --start --pidfile $PIDFILE --make-pidfile --background --exec $DAEMON -- --port=$PORT || return 2
	;;
	stop)
		echo "Stopping ajaxterm"
		start-stop-daemon  --stop --pidfile $PIDFILE
		rm -f $PIDFILE
	;;
	restart|force-reload)
		$0 stop
		sleep 1
		$0 start
	;;
	*)
		echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
		exit 3
	;;
esac

:
"""%locals())
os.system("chmod a+x ajaxterm.initd")
