<template>
<t t-name="at_main">
	<html>
	<head>
	<title>Ajaxterm</title>
	<style type="text/css">
	body { background-color: white; }
	.termframe { float: left; background-color: rgb(63,63,161); padding: 0.4ex; }
	.termframe p { margin: 0; color: white; font-weight: bold; }
	.term { margin: 0.4ex; background-color: black; color: white; padding: 0.4ex; }
	.cursor { background-color: #800; /*text-decoration: blink;*/ }
	</style>
	<script type="text/javascript">
	ajaxterm={};
	ajaxterm.Terminal_ctor=function(id,width,height) {
		var pre=document.getElementById(id);
		var buf="";
		var cx=0;
		var cy=0;
		function display() {
			pre.innerHTML=buf;
		}
		function init() {
			buf="";
			for(var i=0; i&lt;height; i++){
				for(var j=0; j&lt;width; j++)
					buf+=" ";
				buf+="\n";
			}
			display();
		}
		function show(s) {
			buf=s;
			display();
		}
		function replace(pos,s) {
			show(buf.substr(0,pos)+s+buf.substr(pos+s.length));
		}
		function debug(s) {
			replace(0,s);
		}
		var keybuf=[];
		var sending=[];
		function update(key) {
			sending.push(1);
			if(sending.length>1 || keybuf.length==0) {
				sending.pop();
				window.setTimeout(update,10);
			} else {
				var r=new XMLHttpRequest();
				r.onreadystatechange = function () {
					if (r.readyState==4 &amp;&amp; r.status==200) {
						text=r.responseText;
						if(text.length)
							show(text);
						sending.pop();
						window.setTimeout(update,10);
					} else {
						a=1;
					}
				}
				var send="";
				while(keybuf.length>0) {
					send+=keybuf.pop();
				}
				r.open("GET", "/test?a="+send, true);
				r.send(null);
//				r.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
//				r.send(query);
			}
		}
		function keypress(ev) {
			if (!ev) var ev=window.event;
//			s="keypress keyCode="+ev.keyCode+" which="+ev.which+" shiftKey="+ev.shiftKey+" ctrlKey="+ev.ctrlKey+" altKey="+ev.altKey+".";
//			debug(s);
			var kc;
			var k="";
//  else { if (!ev.ctrlKey || ev.keyCode==17) { return; }
			if (ev.keyCode)
				kc=ev.keyCode;
			if (ev.which)
				kc=ev.which;
			if (ev.which==0) {
				if (kc==9) k=String.fromCharCode(9);  // Tab
				else if (kc==8) k=String.fromCharCode(8);  // Backspace
				else if (kc==27) k=String.fromCharCode(27); // Escape
				else {
					if (kc==33) k="[5~";       // PgUp
					else if (kc==34) k="[6~";  // PgDn
					else if (kc==35) k="[4~";  // End
					else if (kc==36) k="[1~";  // Home
					else if (kc==37) k="[D";   // Left
					else if (kc==38) k="[A";   // Up
					else if (kc==39) k="[C";   // Right
					else if (kc==40) k="[B";   // Down
					else if (kc==45) k="[2~";  // Ins
					else if (kc==46) k="[3~";  // Del
					else if (kc==112) k="[[A";  // F1
					else if (kc==113) k="[[B";  // F2
					else if (kc==114) k="[[C";  // F3
					else if (kc==115) k="[[D";  // F4
					else if (kc==116) k="[[E";  // F5
					else if (kc==117) k="[17~"; // F6
					else if (kc==118) k="[18~"; // F7
					else if (kc==119) k="[19~"; // F8
					else if (kc==120) k="[20~"; // F9
					else if (kc==121) k="[21~"; // F10
					else if (kc==122) k="[23~"; // F11
					else if (kc==123) k="[24~"; // F12
					if (k.length) {
						k=String.fromCharCode(27)+k;
					}
				}
			} else if (ev.ctrlKey) {
				if (kc>=97 &amp;&amp; kc&lt;=122) k=String.fromCharCode(kc-96); // Ctrl-A..Z
				else if (kc==219) k=String.fromCharCode(27); // Ctrl-[
				else if (kc==220) k=String.fromCharCode(28); // Ctrl-\   .
				else if (kc==221) k=String.fromCharCode(29); // Ctrl-]
				else if (kc==219) k=String.fromCharCode(29); // Ctrl-]
				else if (kc==219) k=String.fromCharCode(0);  // Ctrl-@
				else if (kc==54) k=String.fromCharCode(30);  // Ctrl-^
				else if (kc==109) k=String.fromCharCode(31); // Ctrl-_
			} else {
				k=String.fromCharCode(kc);
			}
			if(k.length) {
//				debug("send kc:"+kc+" len:"+k.length+"  val:"+escape(k)+"       ");
				keybuf.unshift(escape(k));
			}
			ev.cancelBubble=true;
			if (ev.stopPropagation) ev.stopPropagation();
			if (ev.preventDefault)  ev.preventDefault();
			return false;
		}
		function keydown(ev) {
			return false;
		}
		document.onkeypress=keypress;
		document.onkeydown=keydown;
		init();
		window.setTimeout(update,10);
	}
	ajaxterm.Terminal=function(id,width,height) {
		return new this.Terminal_ctor(id,width,height);
	}
	</script>

	<script type="text/javascript">
	window.onload=function() {
		t=ajaxterm.Terminal("term",80,25);
	};
	</script>
	</head>

	<body>
	<div style="float: left; padding: 1ex;"><pre id="term" class="term"></pre></div>
	</body>
	</html>
</t>
</template>
